{"version":3,"sources":["./src/app/payments/payments.page.html","./src/app/payments/payments-routing.module.ts","./src/app/payments/payments.module.ts","./src/app/payments/payments.page.scss","./src/app/payments/payments.page.ts"],"names":[],"mappings":"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","file":"payments-payments-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\"> \\r\\n    <ion-row>  \\r\\n      <ion-col>        \\r\\n          <ion-back-button defaultHref=\\\"tabs/tab1\\\"></ion-back-button>        \\r\\n  </ion-col> \\r\\n    <ion-col size=\\\"10\\\">\\r\\n    <ion-text>      \\r\\n      <h2>Payments</h2>\\r\\n    </ion-text>\\r\\n  </ion-col> \\r\\n  </ion-row>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-title>\\r\\n        <ion-text>\\r\\n        <h3>Billing and Order details</h3>\\r\\n        </ion-text>\\r\\n        </ion-card-title>       \\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"pay()\\\">\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\"> Name </ion-label>\\r\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" required ngModel name=\\\"name\\\" required></ion-input>\\r\\n        <ion-icon name=\\\"person-outline\\\" slot=\\\"start\\\"></ion-icon>  \\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Town/City</ion-label>\\r\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"town\\\" required ngModel name=\\\"town\\\" required></ion-input> \\r\\n        <ion-icon name=\\\"location-outline\\\" slot=\\\"start\\\"></ion-icon>   \\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-icon name=\\\"call-outline\\\" slot=\\\"start\\\"></ion-icon> \\r\\n        <ion-label position=\\\"floating\\\">Phone</ion-label>\\r\\n        <ion-input type=\\\"tel\\\" [(ngModel)]=\\\"phone\\\" required ngModel name=\\\"phone\\\" required></ion-input>    \\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-icon name=\\\"mail-outline\\\" slot=\\\"start\\\"></ion-icon> \\r\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n        <ion-input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" required ngModel name=\\\"email\\\" required></ion-input>    \\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-icon name=\\\"paper-plane-outline\\\" slot=\\\"start\\\"></ion-icon> \\r\\n        <ion-label position=\\\"floating\\\">Shipment Adrress</ion-label>\\r\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"ship_address\\\" required ngModel name=\\\"ship_address\\\" required placeholder=\\\"Eg Nyabugogo kwamutangana\\\"></ion-input>    \\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-text>\\r\\n          <span style=\\\"font-size: 15pt;\\\"><b>Your order</b></span>\\r\\n        </ion-text>         \\r\\n      </ion-item>\\r\\n      <ion-grid class=\\\"ion-grid\\\">\\r\\n        <ion-row class=\\\"ion-align-items-center cell-class\\\">\\r\\n          <ion-col  size=\\\"4\\\">\\r\\n            <ion-item><b>Product</b></ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-item><b>Qty</b></ion-item>\\r\\n          </ion-col>  \\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-item><b>Amount</b></ion-item>\\r\\n          </ion-col>        \\r\\n        </ion-row>        \\r\\n        <ion-row *ngFor=\\\"let p of cart\\\" class=\\\"ion-align-items-center cell-class\\\">\\r\\n          <ion-col  size=\\\"4\\\">\\r\\n            <ion-item>{{p.ProductName }}</ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-item>{{p.Amount}} </ion-item>\\r\\n          </ion-col>  \\r\\n          <ion-col size=\\\"4\\\">\\r\\n            <ion-item>{{p.Amount* p.Price}} Frw</ion-item>\\r\\n          </ion-col>         \\r\\n        </ion-row>       \\r\\n        <ion-row class=\\\"ion-align-items-center cell-class\\\">\\r\\n          <ion-col  size=\\\"6\\\">\\r\\n            <ion-item>Subtotal</ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-item> {{total()}} Frw</ion-item>\\r\\n          </ion-col>          \\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-align-items-center cell-class\\\">\\r\\n          <ion-col  size=\\\"6\\\">\\r\\n            <ion-item>Shipping Fees</ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-item>Free Shipping</ion-item>\\r\\n          </ion-col>          \\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-align-items-center cell-class\\\">\\r\\n          <ion-col  size=\\\"6\\\">\\r\\n            <ion-item>Total </ion-item>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-item>{{total() |currency:'Frw'}}</ion-item>\\r\\n          </ion-col>          \\r\\n        </ion-row>\\r\\n        \\r\\n      </ion-grid>\\r\\n      <ion-list>\\r\\n  <ion-radio-group [(ngModel)]=\\\"pay_method\\\" required ngModel name=\\\"pay_method\\\" required>\\r\\n    <ion-list-header>\\r\\n      <ion-label>Payment Method</ion-label>\\r\\n    </ion-list-header>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label>Cash on delivery </ion-label>\\r\\n      <ion-radio slot=\\\"start\\\" value=\\\"cash on delivery\\\"></ion-radio>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item>\\r\\n      <ion-label>Mobile Money/Credit Card</ion-label>\\r\\n      <ion-radio slot=\\\"start\\\" value=\\\"mobile Money / credit card\\\" selected></ion-radio>\\r\\n    </ion-item>    \\r\\n  </ion-radio-group>\\r\\n</ion-list>\\r\\n\\r\\n      <ion-button expand=\\\"block\\\" shape=\\\"round\\\" color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">\\r\\n        \\r\\n        <span style=\\\"text-transform:none!important;font-size:20px;\\\">Confirm</span></ion-button> \\r\\n        \\r\\n      </form>     \\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PaymentsPage } from './payments.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentsPage\r\n  },\r\n  {\r\n    path: 'payment-confirm',\r\n    loadChildren: () => import('./payment-confirm/payment-confirm.module').then( m => m.PaymentConfirmPageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaymentsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PaymentsPageRoutingModule } from './payments-routing.module';\r\n\r\nimport { PaymentsPage } from './payments.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PaymentsPageRoutingModule\r\n  ],\r\n  declarations: [PaymentsPage]\r\n})\r\nexport class PaymentsPageModule {}\r\n","export default \".cell-class {\\n  border-color: #aeb7ca;\\n  border-width: 0.01em;\\n  border-style: solid;\\n  margin-bottom: -1px;\\n  background-color: lightgrey;\\n}\\n\\n.ion-grid {\\n  border: 4px solid #0b1427;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF5bWVudHMvQzpcXFVzZXJzXFxva290aGJyYWluXFxEZXNrdG9wXFxDcmVhdGVPcmRlci9zcmNcXGFwcFxccGF5bWVudHNcXHBheW1lbnRzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGF5bWVudHMvcGF5bWVudHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQUE7RUFDQSxvQkFBQTtFQUNBLG1CQUFBO0VBQW9CLG1CQUFBO0VBQ3BCLDJCQUFBO0FDRUo7O0FEQUU7RUFDRSx5QkFBQTtBQ0dKIiwiZmlsZSI6InNyYy9hcHAvcGF5bWVudHMvcGF5bWVudHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNlbGwtY2xhc3Mge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjYWViN2NhOyBcclxuICAgIGJvcmRlci13aWR0aDogLjAxZW07IFxyXG4gICAgYm9yZGVyLXN0eWxlOnNvbGlkOyBtYXJnaW4tYm90dG9tIDogLTFweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JleVxyXG4gIH1cclxuICAuaW9uLWdyaWQge1xyXG4gICAgYm9yZGVyOiA0cHggc29saWQgIzBiMTQyNztcclxuICB9IiwiLmNlbGwtY2xhc3Mge1xuICBib3JkZXItY29sb3I6ICNhZWI3Y2E7XG4gIGJvcmRlci13aWR0aDogMC4wMWVtO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBtYXJnaW4tYm90dG9tOiAtMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7XG59XG5cbi5pb24tZ3JpZCB7XG4gIGJvcmRlcjogNHB4IHNvbGlkICMwYjE0Mjc7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm ,FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { DatePipe } from '@angular/common';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { Product,CartService } from '../services/cart.service';\r\nimport { FirebaseService } from '../services/firebase.service';\r\n\r\ndeclare var window;\r\n\r\ndeclare let Email : any;\r\ndeclare var makePayment: any;\r\n\r\n@Component({\r\n  selector: 'app-payments',\r\n  templateUrl: './payments.page.html',\r\n  styleUrls: ['./payments.page.scss'],\r\n})\r\n\r\nexport class PaymentsPage implements OnInit {  \r\n  cart = this.cartService.getCart(); \r\n  \r\n  \r\n  //from the form  \r\n  name :string; \r\n  town :string;\r\n  phone :string;\r\n  email:string;\r\n  ship_address:string;\r\n  pay_method :string;\r\n   \r\n  //cart: Product[] = [];\r\n  constructor( private cartService: CartService,public alertController: AlertController,private fbs:FirebaseService) {\r\n   \r\n   }\r\n  ngOnInit() {  \r\n    this.cart = this.cartService.getCart(); \r\n    //adding order values to orders array\r\n   \r\n  }\r\n \r\n//creating the product list containing the name and the number \r\n//of items\r\nProductList = [];\r\n\r\n\r\n\r\n  total():number{\r\n    return window.home.getTotal();\r\n  }\r\n  //payment amoiunt\r\n  pay_amount:number=this.total();\r\n\r\n  //getting today's date\r\n  pipe = new DatePipe('en-RW');\r\n  today:string = new Date().toDateString();\r\n    //for email\r\n  body_mail_order:string;    \r\n    //function for alert\r\n    async presentAlert(noti_header:string,noti_subheader:string,noti_message:string){\r\n      const alert = await this.alertController.create({\r\n        cssClass: 'my-custom-class',\r\n        header: noti_header,\r\n        subHeader: noti_subheader,\r\n        message: noti_message,\r\n        buttons: ['OK']\r\n      });  \r\n       alert.present();\r\n    }\r\n    //general function for sending emails\r\n    email_customer(receiver_email:string,subject:string, body:string){\r\n      Email.send({\r\n        Host : \"smtp.elasticemail.com\",\r\n        Username : \"alexnewzniyo@gmail.com\",\r\n        Password : \"C18C89757270B98191EE45EAB7FB47A7ABE7\",\r\n        To : receiver_email,\r\n        From : \"alexnewzniyo@gmail.com\",\r\n        Subject : subject,\r\n        Body : body\r\n        });\r\n    }\r\n    //function for sending order email\r\n    orderEmail(){                \r\n      this.email_customer(this.email,'Your Order',this.body_mail_order);\r\n    }    \r\n    //function that manages payment and orders\r\n  pay() { \r\n    //the body of order email    \r\n  this.body_mail_order=\"<table><thead><tr style='background-color: maroon;color: white;'>\"+\r\n  \"<th colspan='2'><h1><br>Thank you for your order</h1></th></tr></thead><tbody><tr>\"+\r\n   \"<td colspan='2'><br>Hi <b>\"+this.name+\",</b> <br><br>Just to let you know — we've received \"+\r\n   \"your order <b>#9412</b> ,and it is now being processed:<br><br>Payment Method : <b>\"+this.pay_method+\".</b><br>\"+\r\n   \"<h2><b>[Order #9412] (\"+this.today+\")</b></h2></td></tr><tr><td><b>Products</b></td>\"+\r\n   \"<td>Denim Jeans(3in1) - 32 [x 2] <br><br></td></tr> <b><br><tr><td><b>Amount</b></td>\"+\r\n   \"<td>30,000 Frw <br><br></td></tr><tr><td><b>Shipping</b></td><td>Free Shipping <br><br></td>\"+\r\n   \"</tr><tr><td><b>Total</b></td><td>30,000 Frw <br><br></td></tr><tr><td><b>Shipping Address</b></td>\"+\r\n   \"<td>\"+this.ship_address+\" <br><br></td></tr></tbody><tfoot><tr><th colspan='2'>Thank you for shopping with\"+\r\n   \"<a href='https://kstorez.com'>Kstorez</a></th></tr></tfoot></table>\";   \r\n\r\n   //checking the payment method chosen by the customer\r\n    if(this.pay_method == \"mobile Money / credit card\"){\r\n      //this.presentAlert(\"Order Received\",\"Dear,\"+ this.name, \"We have received your order. we are now processing it.\");\r\n      //saving the order details in the database\r\n      this.fbs.createOrder( { \r\n        amount:this.pay_amount,\r\n        cust_email: this.email,\r\n        cust_name: this.name,\r\n        cust_phone:this.phone,\r\n        products: this.cartService.getCart(),\r\n        ref:\"23436565\",\r\n        ship_address:this.ship_address,\r\n        status:\"unpaid\"          \r\n      });\r\n      //email customer\r\n      this.orderEmail();\r\n      //proceeding with payment\r\n      makePayment(this.pay_amount,this.email,this.phone,this.name);\r\n    } else{\r\n      //sending order email\r\n      this.orderEmail();\r\n      //saving the order details in the database\r\n      this.fbs.createOrder( { \r\n        amount:this.pay_amount,\r\n        cust_email: this.email,\r\n        cust_name: this.name,\r\n        cust_phone:this.phone,\r\n        products:\"rice [x 2]\",\r\n        ref:\"23436565\",\r\n        ship_address:this.ship_address,\r\n        status:\"unpaid\"          \r\n      });\r\n      //sending an alert\r\n      //this.presentAlert(\"Order Received\",\"Dear,\"+ this.name, \"We have received your order. we are now processing it.\");\r\n    }    \r\n  }\r\n  \r\n  sendSms(){ \r\n      }\r\n        \r\n}\r\n"],"sourceRoot":"webpack:///"}